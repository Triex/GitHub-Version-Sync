{
  "name": "github-versionsync",
  "displayName": "GitHub Version Sync",
  "description": "Streamline version management and GitHub releases with automatic version bumping, git tagging, and customisable release notes.",
  "version": "0.0.9",
  "publisher": "TriexDev",
  "icon": "images/icon.png",
  "screenshots": [
    {
      "path": "images/version-panel.png",
      "label": "Version Control Panel"
    },
    {
      "path": "images/release-creation.png",
      "label": "Release Creation"
    }
  ],
  "engines": {
    "vscode": "^1.94.0",
    "node": ">=18.0.0"
  },
  "categories": [
    "Source Control",
    "Other",
    "SCM Providers"
  ],
  "keywords": [
    "version",
    "github",
    "release",
    "semver",
    "tag"
  ],
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "badges": [
    {
      "url": "https://img.shields.io/visual-studio-marketplace/v/TriexDev.github-versionsync",
      "href": "https://marketplace.visualstudio.com/items?itemName=TriexDev.github-versionsync",
      "description": "VS Marketplace Version"
    },
    {
      "url": "https://img.shields.io/visual-studio-marketplace/d/TriexDev.github-versionsync",
      "href": "https://marketplace.visualstudio.com/items?itemName=TriexDev.github-versionsync",
      "description": "VS Marketplace Downloads"
    }
  ],
  "preview": true,
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": false,
      "description": "This extension requires workspace trust to access Git and GitHub features."
    }
  },
  "features": [
    {
      "title": "Automatic Version Management",
      "description": "One-click version bumping with support for major, minor, and patch updates following semantic versioning."
    },
    {
      "title": "GitHub Release Integration",
      "description": "Create and publish GitHub releases directly from VS Code with auto-generated release notes."
    },
    {
      "title": "Git Tag Automation",
      "description": "Automatically create and push Git tags with customizable prefixes when versions are updated."
    },
    {
      "title": "Flexible Configuration",
      "description": "Customize version file locations, release triggers, and tag formats to match your workflow."
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/TriexDev/IDE-Easy-Commit"
  },
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "build": "tsc -p ./ && vsce package",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "test": "echo \"No tests yet\""
  },
  "dependencies": {
    "octokit": "^3.1.2"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@types/vscode": "^1.94.0",
    "typescript": "^5.0.0",
    "@vscode/vsce": "^2.24.0"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "version-control",
          "title": "Version Control",
          "icon": "$(versions)"
        }
      ]
    },
    "views": {
      "scm": [
        {
          "id": "scm-version-selector",
          "name": "Version Control",
          "when": "git.state == initialized"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "scm-version-selector",
        "contents": "Select a version type to start managing versions.\n[Select Version Type](command:github-versionsync.selectVersionType)",
        "when": "git.state == initialized"
      }
    ],
    "commands": [
      {
        "command": "github-versionsync.test",
        "title": "Test Command System",
        "category": "Version Control"
      },
      {
        "command": "github-versionsync.selectVersionType",
        "title": "Select Version Type",
        "icon": "$(versions)",
        "category": "Version Control"
      },
      {
        "command": "github-versionsync.openVersionSettings",
        "title": "Version Settings",
        "icon": "$(gear)",
        "category": "Version Control"
      },
      {
        "command": "github-versionsync.toggleGitHubRelease",
        "title": "Toggle GitHub Releases",
        "icon": "$(github)",
        "category": "Version Control"
      },
      {
        "command": "github-versionsync.createOneOffRelease",
        "title": "Create GitHub Release",
        "icon": "$(github)",
        "category": "Version Control"
      },
      {
        "command": "github-versionsync.preCommit",
        "title": "Commit with Version",
        "category": "Version Control",
        "icon": "$(git-commit)"
      }
    ],
    "keybindings": [
      {
        "command": "github-versionsync.preCommit",
        "key": "ctrl+enter",
        "mac": "cmd+enter",
        "when": "scmInputBoxFocus && scmRepository"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "GitHub Version Sync",
      "properties": {
        "github-versionsync.versionFile": {
          "type": "string",
          "default": "",
          "description": "Optional: Path to a VERSION file (relative to workspace root). Leave empty to use only package.json"
        },
        "github-versionsync.enableAutoTag": {
          "type": "boolean",
          "default": true,
          "description": "Automatically create Git tags when version is updated"
        },
        "github-versionsync.autoUpdateOnCommit": {
          "type": "boolean",
          "default": true,
          "description": "Automatically update version when committing changes (requires explicit version selection first)"
        },
        "github-versionsync.enableGitHubRelease": {
          "type": "boolean",
          "default": false,
          "description": "Create GitHub releases automatically when version is updated"
        },
        "github-versionsync.generateChangelog": {
          "type": "boolean",
          "default": true,
          "description": "Generate changelog when creating a release"
        },
        "github-versionsync.changelogShowDate": {
          "type": "boolean",
          "default": false,
          "description": "Include dates in the changelog"
        },
        "github-versionsync.changelogShowAuthor": {
          "type": "boolean",
          "default": false,
          "description": "Include authors in the changelog"
        },
        "github-versionsync.releasePrefix": {
          "type": "string",
          "default": "v",
          "description": "Prefix to use for release tags (e.g., 'v' for v1.0.0)"
        },
        "github-versionsync.releaseOn": {
          "type": "array",
          "default": [
            "major",
            "minor",
            "patch"
          ],
          "items": {
            "type": "string",
            "enum": [
              "major",
              "minor",
              "patch"
            ]
          },
          "uniqueItems": true,
          "description": "When to create GitHub releases (select one or more)"
        },
        "github-versionsync.preReleaseCommands": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Commands to run before creating a release (e.g., ['npm run build', 'vsce package']). Commands are run in sequence."
        },
        "github-versionsync.includePackageFiles": {
          "type": "array",
          "default": [
            "*.vsix"
          ],
          "items": {
            "type": "string"
          },
          "description": "Glob patterns for files to include in the release assets (e.g., ['*.vsix', '*.zip'])"
        },
        "github-versionsync.confirmVersionUpdate": {
          "type": "boolean",
          "default": true,
          "description": "Show confirmation dialog before updating version during commit"
        },
        "github-versionsync.versionFormat": {
          "type": "string",
          "enum": [
            "arrow",
            "bump",
            "simple",
            "release",
            "brackets"
          ],
          "default": "arrow",
          "description": "Format for displaying version in commit messages. Examples:\n- arrow: 'feat: My feature â†’ v1.2.3'\n- bump: 'feat: My feature â‡§ v1.2.3'\n- simple: 'feat: My feature v1.2.3'\n- release: 'feat: My feature ðŸ“¦ v1.2.3'\n- brackets: 'feat: My feature (v1.2.3)'"
        }
      }
    },
    "menus": {
      "scm/title": [
        {
          "command": "github-versionsync.openVersionSettings",
          "group": "navigation"
        },
        {
          "command": "github-versionsync.selectVersionType",
          "group": "1_version@1"
        },
        {
          "command": "github-versionsync.toggleGitHubRelease",
          "group": "navigation"
        },
        {
          "command": "github-versionsync.preCommit",
          "group": "main",
          "when": "scmProvider == git"
        }
      ],
      "view/title": [
        {
          "command": "github-versionsync.selectVersionType",
          "when": "view == scm-version-selector",
          "group": "navigation"
        }
      ],
      "scm/resourceState/context": [
        {
          "command": "github-versionsync.preCommit",
          "when": "scmProvider == git",
          "group": "inline"
        }
      ]
    }
  },
  "main": "./out/extension.js",
  "markdown": "github",
  "qna": "marketplace"
}